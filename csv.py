# Copyright 2008 Pelle Nilsson (perni@lysator.liu.se)
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

# Partial support for RFC 4180.
# Tested with documents generated by OpenOffice.

# (Yes, I know there is a csv parser in the Python standard-libs.)

import sys

class CSVParser:
    def __init__(self):
        pass

    def last_char(self, s, i):
        if i > 0:
            return s[i-1]
        return None

    def next_char(self, s, i):
        if i + 1 < len(s):
            return s[i+1]
        return None

    def parse_string(self, s):
        row = []
        rows = []
        cell = ""
        quoted = False
        i = 0
        while i < len(s):
            if not quoted and (s[i] == '\n' or s[i] == '\r'):
                row.append(cell)
                if len(row):
                    rows.append(row)
                    row = []
                cell = ""
                if (i+1 < len(s)
                    and (s[i+1] == '\n' or s[i+1] == '\r')
                    and s[i+1] != s[i]):
                    i = i + 1
            elif not quoted and (s[i] == ',' or s[i] == ';'):
                row.append(cell)
                cell = ""
            elif s[i] == '"' and len(cell) == 0:
                quoted = True
            elif quoted and s[i] == '"' and self.next_char(s, i) == '"':
                cell = cell + '"'
                i = i + 1
            elif s[i] == '"' and (self.next_char(s, i) == ','
                                  or self.next_char(s, i) == ';'
                                  or self.next_char(s, i) == '\n'
                                  or self.next_char(s, i) == '\r'
                                  or i + 1 == len(s)):
                quoted = False
            elif s[i] == '"':
                pass # this is an error, but silently ignored here
            else:
                cell = cell + s[i]
#            print "char: '%s' cell: '%s' row: '%s'" % (s[i], cell, str(row))
            i = i + 1
        if len(row) or len(cell):
            row.append(cell)
        if len(row):
            rows.append(row)
#        print "... cell: '%s' row: '%s' rows: '%s'" % (cell, str(row), str(rows))
        return rows

def reader(file):
    return CSVParser().parse_string(unicode(file.read(), 'UTF-8'))

if __name__ == '__main__':
    print str(reader(open(sys.argv[1])))
